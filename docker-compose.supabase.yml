version: '3.8'

# Minimal example Docker Compose to run Supabase components locally.
# This setup is intended for local development only.
# NOTE: This is a simplified stack. For production-grade self-hosting, use the
# official Supabase self-hosting guide.

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - supabase_db_data:/var/lib/postgresql/data
    ports:
      - "54321:5432"

  gotrue:
    image: supabase/gotrue:latest
    depends_on:
      - db
    environment:
      GOTRUE_SITE_URL: ${VITE_SUPABASE_URL:-http://localhost:54321}
      GOTRUE_JWT_SECRET: ${GOTRUE_JWT_SECRET:-example_jwt_secret}
      DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-postgres}
      ANON_KEY: ${VITE_SUPABASE_ANON_KEY:-anon}
      SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY:-service_role}
    ports:
      - "9999:9999"

  realtime:
    image: supabase/realtime:latest
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB:-postgres}
      DB_USER: ${POSTGRES_USER:-postgres}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PORT: 4000
    ports:
      - "4000:4000"

  postgrest:
    image: postgrest/postgrest:latest
    depends_on:
      - db
    environment:
      PGRST_DB_URI: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-postgres}
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: anon
    ports:
      - "3000:3000"

  storage:
    image: supabase/storage-api:latest
    depends_on:
      - db
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-postgres}
      ANON_KEY: ${VITE_SUPABASE_ANON_KEY:-anon}
      SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY:-service_role}
    ports:
      - "5000:5000"

  adminer:
    image: adminer:latest
    restart: always
    ports:
      - "8081:8080"

volumes:
  supabase_db_data:

# Usage:
# 1) Create a `.env.supabase` or set env vars.
# 2) docker compose -f docker-compose.supabase.yml up -d
# 3) Access Adminer at http://localhost:8081 (connect to host=db user=postgres ...)
